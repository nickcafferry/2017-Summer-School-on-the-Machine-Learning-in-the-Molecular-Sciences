###################################2014-12-6###################################################
###################################ZHANG LABS##################################################
####################################BAOJI HE###################################################
#!/usr/perl
open(TTT,">./train-medium.arff");
print TTT "\@relation ''\n";
for($i=1;$i<=401;$i++)
{
print TTT "\@attribute 'feature$i' numeric\n";
}
print TTT "\@attribute 'class' {'bad','good'}\n";
print TTT "\@data\n";




$dir="/nfs/amino-home/baojihe";
$PDBdir="/nfs/amino-home/yzhang/PDBall";
@lists=`cat $dir/STATIS/final`;

$downlimit=12;
$uplimit=23;
$sum=0;
$yu=0;
$option=0.2;
$option1=0.0;
$uuuuu=0;
foreach $line (@lists)
{
	chomp($line);


	$yu++;
##################################NATIVE######################################

$pdbname=lc(substr($line,0,4)).uc(substr($line,4,1)).".pdb";

#$pdbname="$line".".pdb";
if(!-e "$PDBdir/$pdbname"){$pdbname=substr($line,0,5)."_".substr($line,6,1).".atm";}
`sed "s/MSE/MET/g" $PDBdir/$pdbname>./temp`;
$pdbname="temp";
@NW=`~/bin/NWalign ~/betacon/data/$line.dat ./$pdbname 2`;
#print "@NW";
$NWline=@NW;
$seq=$NW[$NWline-5];
$cors=$NW[$NWline-4];
$pdb=$NW[$NWline-3];
$note=0;
@label=();
#print "$seq";
#print "$cors";
#print "$pdb";
$len1=length($seq);
#print "$len1\n";
for($i=1;$i<$len1;$i++)
{
        if(substr($seq,$i-1,1)==substr($pdb,$i-1,1) and (substr($cors,$i-1,1) eq ":"))
                {
                                $label[$note]=$i;
                                $note++;
                          #               print "$i";
                 }
}
$lenlabel=@label;


        @pdbcorrx=();
        @pdbcorry=();
        @pdbcorrz=();
        @countca=();
        $paraca="CA";
        if(!-e "/nfs/amino-home/baojihe/libsvm/libsvm-3.18/record/$pdbname"){exit();}
        open(RRR,"/nfs/amino-home/baojihe/libsvm/libsvm-3.18/record/$pdbname");
                $note=0;
                while($para1=<RRR>)
                {
                        chomp($para1);
                        @temp=();
                        @temp=split(/\s+/,$para1);
                        if($temp[2] eq $paraca)
                        {
                                $pdbcorrx[$note]=$temp[5];
                                $pdbcorry[$note]=$temp[6];
                                $pdbcorrz[$note]=$temp[7];
                                $countca[$note]=$label[$note];
                                $note++;
                        }

                }
        close(RRR);
        $conn=0;
        @native1=();
        @native2=();
        for($i=0; $i<=$note-2;$i++)
        {
                for($j=$i+1;$j<=$note-1;$j++)
                {
                        $deltax=$pdbcorrx[$i]-$pdbcorrx[$j];
                        $deltay=$pdbcorry[$i]-$pdbcorry[$j];
                        $deltaz=$pdbcorrz[$i]-$pdbcorrz[$j];
                        $distance=$deltax**2+$deltay**2+ $deltaz**2;
                     if(($distance<=64.0) and ($countca[$j]-$countca[$i]>=$downlimit) and ($countca[$j]-$countca[$i]<=$uplimit))
                        {
                                $native1[$conn]=$countca[$i];
                                $native2[$conn]=$countca[$j];
                                $conn++;
                        }
                }
        }
#############################################################################


$note=30;
open(WER,"/nfs/amino-home/baojihe/betacon/data/$line.dat");
while($tyu=<WER>)
{
        chomp($tyu);
        $opo=length($tyu);
        if($opo>$note){$note=$opo;}

}
close(WER);
###############################################################################
#
#

@ss=();
for($l=0;$l<=$note;$l++)
{
	for($k=0;$k<4;$k++)
	{
		$ss[$l][$k]=0;
	}
}
open(GGG,"/nfs/amino-home/baojihe/SVMseq/data/$line/seq.ss");
<GGG>;
<GGG>;
while($tr=<GGG>)
{
	chomp($tr);
	@temp=();
	@temp=split(/\s+/,$tr);
	$ss[$temp[1]][1]=$temp[4];
	$ss[$temp[1]][2]=$temp[5];
	$ss[$temp[1]][3]=$temp[6];

}
close(GGG);



for($i=0;$i<100;$i++)
{
	print TTT "$ss[int($i*$note/100)][1], $ss[int($i*$note/100)][2], $ss[int($i*$note/100)][3], ";
}






@solve=();
open(GGG,"/nfs/amino-home/baojihe/SVMseq/data/$line/exp.dat");
<GGG>;
while($tr=<GGG>)
{
	chomp($tr);
	$tr=~s/^\s+|\s+$//g;
	@temp=();
	@temp=split(/\s+/,$tr);
	$temp[18]=0;
	if($temp[1]==0)
	{
		$solve[$temp[0]]=0.0;
	}
	else
	{
		for($l=1;$l<=17;$l++)
		{
			if($temp[$l]==1 and $temp[$l+1]==0)
			{$solve[$temp[0]]=$l*0.05;
				goto TTT;
			}
		}
	}
	TTT:;
	
}
close(GGG);


for($i=0;$i<100;$i++)
{
	print TTT "$solve[int($i*$note/100)], ";
}

$loglength=log($note)/log(10);


$class=$conn/$note;

print TTT "$loglength, $class\n";













}

exit();
