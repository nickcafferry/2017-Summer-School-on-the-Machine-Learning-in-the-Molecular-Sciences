#!/usr/bin/perl
#PBS -e !ERRFILE!
#PBS -o !OUTFILE!
#PBS -l !WALLTIME!
#PBS -l !NODE!

use Math::Trig;

use Cwd qw();
$envdir=Cwd::abs_path();

########### setup  the environment and Working DIRectory ###
#$ENV{'PATH'}="/usr/local/bin:/bin:/usr/bin:/usr/X11R6/bin:/usr/pgi/linux86/bin";
#$ENV{'LD_LIBRARY_PATH'}="/usr/local/lib:/usr/lib:/lib";
#$ENV{'LD_LIBRARY_PATH'}="$envdir/shared_lib:$ENV{'LD_LIBRARY_PATH'}";


##### report node -------->
`hostname`=~/(\S+)/;
$node=$1;
printf "hostname: $node\n";
$time=`date`;
printf "starting time: $time";
$pwd=`pwd`;
printf "pwd: $pwd";
#^^^^^^^^^^^^^^^^^^^^^^^^^^

################# directories #############################
$s="!S!";
$s1="protein"; #for NeBcon
$data_dir="!DATA_DIR!";  #for seq.txt and init.dat

$tag="!TAG!";

#$work_dir="/tmp/!USER!/!TAG!";
$work_dir="/scratch/$ENV{USER}/$ENV{SLURM_JOBID}";
$work_dir="/tmp/$ENV{USER}" if (!-d "$work_dir" || ! "$ENV{SLURM_JOBID}");
$work_dir="$work_dir/$tag";

$psicov_dir="!BIN_DIR!/psicov"; ##Edited from /nfs/amino-library/contact/
$blastdir="!BIN_DIR!/lib/blast/bin"; #Edited from /nfs/amino-library/blast/bin
$bindir="!BIN_DIR!";
$bindir2="!BIN_DIR!/bin";
$PSSpreddir="!BIN_DIR!/lib/bin/PSSpred"; 
$wekadir="!BIN_DIR!/bin/weka-3-7-12";
$libdir="!BIN_DIR!/lib";


################ working directory ########################
`/bin/rm -fr $work_dir`;
`/bin/mkdir -p $work_dir`;
chdir "$work_dir";

################ make fasta sequence file #################
@seqtxts=`cat $data_dir/seq.txt`;
$sequence="";
foreach $seqtxt(@seqtxts){
    goto pos6 if($seqtxt=~/\>/);
    $seqtxt=~s/\s//mg;
    $seqtxt=~s/\n//mg;
    $sequence=$sequence.$seqtxt;
  pos6:;
}
$Lch=length $sequence;
open(seq,">protein.seq");
printf seq ">protein\n";
for($i=1;$i<=$Lch;$i++){
    $a=substr($sequence,$i-1,1);
    printf seq "$a";
    $seqQ{$i}=$a;   #only for check
    #$log{$i,$seqQ{$i}}++;
    if($i==int($i/60)*60){
	printf seq "\n";
    }
}
printf seq "\n";
close(seq);
########## prepare sequence for NeBcon:
open(seq,">seq.txt");
printf seq "$sequence\n";
close(seq);

########### run meta-psicov #######################
$bindir1="!BIN_DIR!/metapsicov";
#system("$bindir1/run_metapsicov_yz2a protein.seq"); #with 6h limit on psicov
#system("$bindir1/run_metapsicov_yz2b protein.seq"); #with 3h limit on psicov
system("$bindir1/run_metapsicov_yz2e protein.seq"); #with 160m limit on psicov

if(-s "protein.metapsicov.stage2" <10){
    print "there is no protein.metapsicov.stage2 generated\n";
    goto pos13; #run NeBcon
    #`rm -rf $work_dir`;
    #exit();
    #system("$psicov_dir/$psicov -o protein.aln > protein.map");
}

############ sort output ----------->
for($q=1;$q<=2;$q++){
    open(a,"protein.metapsicov.stage$q");
    $n=0;
    while($line=<a>){
	if($line=~/(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)/){
	    $n++;
	    $I{$n}=$1;
	    $J{$n}=$2;
	    $conf{$n}=$5;
	}
    }
    close(a);
    open(a,">metapsicov.$q.dat");
    printf a "$n\n";
    for($i=1;$i<=$n;$i++){
	printf a "%5d %5d %8.3f\n",$I{$i},$J{$i},$conf{$i};
    }
    close(a);
}

############## Copy result back to output ##########
`/bin/cp metapsicov.1.dat $data_dir/metapsicov1.dat`;
`/bin/cp metapsicov.2.dat $data_dir/metapsicov.dat`;

print "METAPSICOV is complete now\n\n";

##### ^^^^^^^^^^^^^^^ metapsicov is completed ^^^^^^^^^^^^^^^^^^^^

print "Let's start NeBcon ....\n";
 pos13:;
##################################################/////////
############### run NN-BYES ------------------->
@FF=qw(
   SVMSEQ
   SPCON
   PSICOV
   ); # programs needed for NNBYES

%NN_name=(
    "SVMSEQ"=>"svmseq.dat",
    "SPCON"=>"SPcon",
    "PSICOV"=>"psicov",
    );

############################################################
# check and copy files ---->
 pos10:;
$k_com=0;
$k_run=0;
$k_mis=0;
$qzy=`/nfs/amino-home/zhng/bin/qzy`;
foreach $F(@FF){
    $a=lc($F);
    $file1="$data_dir/$a.NNB";
    $file2="$NN_name{$F}$s1.map";
    if($F eq "SVMSEQ"){
	$file2="svmseq.dat";
    }
    if(-s "$file2"){
	$k_com++;
    }else{
	if(-s "$file1"){
	    $k_com++;
	    print "----> cp $file1 $file2\n";
	    `cp $file1 $file2`;
	}else{
	    $jobname="$F\_$s";
	    if($qzy=~/\s$jobname/){
		$k_run++;
		print "$file1 is running ....\n";
	    }else{
		$k_mis++;
		print "$file1 is missing ....\n";
	    }
	}
    }
}
if($k_run==0 || $k_com>=5){ #allow psicov missed
    print "$k_com completed, $k_run running, $k_mis missed, let's go to NeBcon\n";
}else{
    print "$k_com completed, $k_run running, $k_mis missed, let's wait for 2 minutes\n";
    sleep(120);
    goto pos10;
}

`cp protein.metapsicov.stage2 meta-psicovstage2$s1.map`;
`cp protein.ccmpred CCMpred$s1.map`;
`cp protein.evfold freecontact$s1.map`;
`cp protein.ccmpred $data_dir/ccmpred.dat`; ##Edited
`cp protein.evfold $data_dir/freecontact.dat`; ##Edited
`cp protein.colstats $data_dir/$s1.colstats`;
#`cp protein.ccmpred $datadir/ccmpred.dat`; Edit

###############################################################
# Usage:  run_nnb.pl 
#     1, this program must be run after metapsicov
#     2, all input/output files should be in the current directory
# input 
#     seq.txt
#     protein.ss         (by run_metapsicov_yz1)
#     protein.solv       (by run_metapsicov_yz1)
#     betaconprotein.map
#     CCMpredprotein.map     (by run_metapsicov_yz2)
#     freecontactprotein.map (by run_metapsicov_yz2)
#     meta-psicovstage2protein.map (by run_metapsicov_yz2)
#     psicovprotein.map
#     SPconprotein.map
#     SVMconprotein.map
# output
#     CA.contact    (CA contact)
#     CB.contact    (CA contact)
####################################################################
system("$bindir2/run_nnb.pl $wekadir $bindir2"); ## Changed

`/bin/cp CA.contact $data_dir/nnbayes.dat`;
`/bin/cp CB.contact $data_dir/nnbayesb.dat`;
`/bin/cp protein-step1 $data_dir/protein-step1`;
`/bin/cp protein-step2 $data_dir/protein-step2`;
`/bin/cp protein-step3 $data_dir/protein-step3`;

print "NeBcon  have been completed now \n\n";

print "Let's convert all contacts into QUARK format ....\n";

###### convert all contact predictions to quark format --------->
@PP=qw(
       SVMSEQ

       SPCON
       PSICOV
       METAPSICOV
       METAPSICOV1

       NNBAYES
       NNBAYESB
       );

foreach $F(@PP){
    $f=lc($F);
    
    $a2="$data_dir/$f.dat";
    print "a2=$a2\n";
    if(-s "$a2"){
	print "\n------------- convert $s, $F ===============================>\n";
	
      pos9:;
	$a1="$f";
	$a3="$data_dir/nnbayesb.dat";
	$a4="$data_dir/seq100.com.ss";
	$a4="$data_dir/seq.dat.ss" if(!-s "$a4");
	$a5="$data_dir/exp100.dat";
	$a5="$data_dir/exp.dat" if(!-s "$a5");
	$a6="$data_dir/$f.dat.quark";
	if(!-s "$a4" || !-s "$a5"){
	    printf "$a4 or $a5 not exist, let's run PSSpred to create them\n";
	    $random=int(rand()*100000000000);
	    $workdir="/tmp/$random";
	    system("$PSSpreddir/runPSSpred.pl $workdir $data_dir seq.txt seq.dat exp.dat $bindir"); ## added bindir
	    goto pos9;
	}
	
	$bind="$bindir2"; 
	#print "$bind/cont_quark.pl $a1 $a2 $a3 $a4 $a5 $a6\n";
	system("$bind/cont_quark.pl $a1 $a2 $a3 $a4 $a5 $a6 $bindir2 $wekadir"); ## Added bindir2 and wekadir
    }
}
#^^^^^^^^ convert_quark completed ^^^^^^^^^^^^^^^^

################# endding procedure ######################
`rm -rf $work_dir`;
$time=`date`;
printf "ending time: $time";
`sync`;
`sync`;
sleep(1);
exit();
